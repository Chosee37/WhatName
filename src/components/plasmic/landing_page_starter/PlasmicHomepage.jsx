// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: scFep1yV2m46PC9GmZdAAJ
// Component: gDtVwQQ5omnc6
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Navbar from "../../Navbar"; // plasmic-import: 24Ns76HZ8CU199/component
import Button from "../../Button"; // plasmic-import: 7_ur_Gg5fMLo0x/component
import SignUpPrompt from "../../SignUpPrompt"; // plasmic-import: Y08WiHmlpDHerS/component
import Section from "../../Section"; // plasmic-import: pDoRRVqWjpex/component
import ValueProp from "../../ValueProp"; // plasmic-import: pCj1UpAZoaMeJL/component
import ListItem from "../../ListItem"; // plasmic-import: xYz3o7XyodVA1_/component
import PriceCard from "../../PriceCard"; // plasmic-import: M6FTF8hcCIDSdH/component
import Banner from "../../Banner"; // plasmic-import: NFaAhK7CNnboU_/component
import Testimonial from "../../Testimonial"; // plasmic-import: ZAPv9uZXsb-IqK/component
import CallToActionSection from "../../CallToActionSection"; // plasmic-import: mHl_x0aV05gLDD/component
import FooterSection from "../../FooterSection"; // plasmic-import: 9zsWfGCN3VHyK7/component
import { useScreenVariants as useScreenVariantslwkYg8Ze9PdYs } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: LwkYG8ZE9pdYs/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_landing_page_starter.module.css"; // plasmic-import: scFep1yV2m46PC9GmZdAAJ/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: gDtVwQQ5omnc6/css
import ChevronRightIcon from "./icons/PlasmicIcon__ChevronRight"; // plasmic-import: QSw3LsQaf9h8X/icon
import CheckIcon from "./icons/PlasmicIcon__Check"; // plasmic-import: MbwTi4khdf7cE/icon
import CheckCircleIcon from "./icons/PlasmicIcon__CheckCircle"; // plasmic-import: z-1bHa1_jPZ-G/icon
import sunglassesMaleMcqH0JtTiGtxg from "./images/sunglassesMale.jpeg"; // plasmic-import: mcqH0jtTiGtxg/picture
import sneakersNihmNntJz0Exu from "./images/sneakers.jpeg"; // plasmic-import: NIHMNntJZ0Exu/picture
import shirtWoman0ZC70Wxg6LS7 from "./images/shirtWoman.png"; // plasmic-import: 0Z-c70wxg6lS7/picture
import loom97S7RFodIStwa from "./images/loom.svg"; // plasmic-import: 97S7rFodIStwa/picture
import strapi7Y9RC7C045TS1 from "./images/strapi.svg"; // plasmic-import: 7y9rC7C045tS1/picture
import segmentR8FFuhtXrhyzg from "./images/segment.svg"; // plasmic-import: r8fFUHTXrhyzg/picture
import xstate32C5Ajn3BJ8No from "./images/xstate.svg"; // plasmic-import: 32C5Ajn3bJ8NO/picture
import mapboxQcVyAlOn6Xo1H from "./images/mapbox.svg"; // plasmic-import: qcVYAlON6Xo1H/picture
import tracyHbRHTdjarv0 from "./images/tracy.png"; // plasmic-import: Hb-r_HTdjarv0/picture
import elaineDKgidXsX5NNz from "./images/elaine.png"; // plasmic-import: DKgidXsX5nNz_/picture
import louisOStIjNQ0Xnvo from "./images/louis.jpeg"; // plasmic-import: oStIj-nQ0Xnvo/picture
import meetingJBnIzTsNkKhfY from "./images/meeting.jpeg"; // plasmic-import: jBNIzTsNKKhfY/picture

export const PlasmicHomepage__VariantProps = new Array();

export const PlasmicHomepage__ArgProps = new Array();

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());

const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function PlasmicHomepage__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantslwkYg8Ze9PdYs()
  });
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <p.Stack
            as={"div"}
            data-plasmic-name={"headerHeroSection"}
            data-plasmic-override={overrides.headerHeroSection}
            hasGap={true}
            className={classNames(projectcss.all, sty.headerHeroSection)}
          >
            <Navbar
              data-plasmic-name={"navbar"}
              data-plasmic-override={overrides.navbar}
              className={classNames("__wab_instance", sty.navbar)}
            />

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__goj1K)}
            >
              <div className={classNames(projectcss.all, sty.column__kkgKt)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__jIqg6)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__rQqz7)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__yZ1Y3)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__seHa4
                        )}
                      >
                        {"Updated!"}
                      </div>
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__hmt6N
                      )}
                    >
                      {"Pokusná stránka"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__iZfSd
                      )}
                    >
                      {
                        "Orci dui condimentum rutrum laoreet hac purus porta sem sem a vivamus a posuere vel molestie."
                      }
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__sziP)}
                  >
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__f2TLg
                      )}
                      color={"darkGray"}
                      endIcon={
                        <ChevronRightIcon
                          className={classNames(projectcss.all, sty.svg__qp57Q)}
                          role={"img"}
                        />
                      }
                      showEndIcon={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__yQd0F
                        )}
                      >
                        {"Start now"}
                      </div>
                    </Button>

                    <Button
                      bgDifference={true}
                      className={classNames(
                        "__wab_instance",
                        sty.button__dzmw8
                      )}
                      color={"darkGray"}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___1AY7
                        )}
                      >
                        {"Learn more…"}
                      </div>
                    </Button>
                  </p.Stack>
                </p.Stack>
              </div>

              <div className={classNames(projectcss.all, sty.column__vml7J)}>
                <SignUpPrompt
                  data-plasmic-name={"signUpPrompt"}
                  data-plasmic-override={overrides.signUpPrompt}
                  className={classNames("__wab_instance", sty.signUpPrompt)}
                />
              </div>
            </p.Stack>
          </p.Stack>

          <Section
            data-plasmic-name={"valuePropsSection"}
            data-plasmic-override={overrides.valuePropsSection}
            className={classNames("__wab_instance", sty.valuePropsSection)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__i71Is)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__iujRg)}>
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__t83G4
                  )}
                >
                  {"Proposing values"}
                </h2>
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___2LKVz
                )}
              >
                {
                  "Consectetur a adipiscing sagittis sed proin libero himenaeos ornare adipiscing suscipit leo vestibulum facilisi consequat nisi nisi adipiscing habitant facilisis suspendisse hac integer eget quam facilisis sem placerat fames."
                }
              </div>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__bmeor)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___9V2Su)}
              >
                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__rWCn)}
                  description={
                    "Nulla odio mauris enim parturient adipiscing vestibulum inceptos."
                  }
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__yyy3G)}
                      role={"img"}
                    />
                  }
                  title={"Powerful"}
                />

                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__eXaaB)}
                  description={
                    "Consequat scelerisque a eros taciti nisl a sodales."
                  }
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__lJTn)}
                      role={"img"}
                    />
                  }
                  title={"Faster"}
                />

                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__ouHEw)}
                  description={"At ut condimentum amet adipiscing ac diam a."}
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__nE0EQ)}
                      role={"img"}
                    />
                  }
                  title={"Best and brightest"}
                />

                <ValueProp
                  className={classNames(
                    "__wab_instance",
                    sty.valueProp___7DiiS
                  )}
                  description={
                    "Donec purus nec vestibulum volutpat vivamus vulputate suspendisse."
                  }
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__l2H0G)}
                      role={"img"}
                    />
                  }
                  title={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vbq7U
                      )}
                    >
                      {"Dynamic range"}
                    </div>
                  }
                />
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__x2CHf)}
              >
                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__ikwro)}
                  description={
                    "Commodo pretium himenaeos nisi potenti ad in ante."
                  }
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg___9InNd)}
                      role={"img"}
                    />
                  }
                  title={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kHzg1
                      )}
                    >
                      {"Portable"}
                    </div>
                  }
                />

                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__qxUFh)}
                  description={
                    "Magna ullamcorper ut arcu nisi a per facilisis."
                  }
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__tQeM)}
                      role={"img"}
                    />
                  }
                  title={"Production-ready"}
                />

                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__goZX)}
                  description={
                    "Ac lobortis praesent sagittis dictumst fermentum vestibulum nunc."
                  }
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__mUaG)}
                      role={"img"}
                    />
                  }
                  title={"Magical"}
                />

                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__svtja)}
                  description={
                    "A parturient mi suspendisse nisl inceptos nullam a."
                  }
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__oBhr5)}
                      role={"img"}
                    />
                  }
                  title={"Accessible"}
                />
              </p.Stack>
            </p.Stack>
          </Section>

          <Section
            data-plasmic-name={"checkpointsSection"}
            data-plasmic-override={overrides.checkpointsSection}
            background={"dark"}
            className={classNames("__wab_instance", sty.checkpointsSection)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns___23ThM)}
              id={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "features"
                  : "features"
              }
            >
              <div className={classNames(projectcss.all, sty.column__ueEN)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__kkj0R)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__burLo
                    )}
                  >
                    {"Freedoms"}
                  </div>

                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2___6OieJ
                    )}
                  >
                    {"Open by design"}
                  </h2>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mJp3I
                    )}
                  >
                    {
                      "Vitae sed sem a justo mauris potenti a primis vivamus justo tempor viverra adipiscing convallis fusce odio condimentum mi parturient ultricies."
                    }
                  </div>

                  <Button
                    className={classNames("__wab_instance", sty.button__ne265)}
                    endIcon={
                      <ChevronRightIcon
                        className={classNames(projectcss.all, sty.svg__lw7Hp)}
                        role={"img"}
                      />
                    }
                    flat={true}
                    showEndIcon={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tzzEm
                      )}
                    >
                      {"Learn more"}
                    </div>
                  </Button>
                </p.Stack>
              </div>

              <div className={classNames(projectcss.all, sty.column___8Xj5X)}>
                <div className={classNames(projectcss.all, sty.freeBox__iOTek)}>
                  <ListItem
                    bottomBorder={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "dark"
                        : "dark"
                    }
                    className={classNames("__wab_instance", sty.listItem__vzPt)}
                    icon={
                      <CheckCircleIcon
                        className={classNames(projectcss.all, sty.svg__flsSd)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__aqQna
                      )}
                    >
                      {"Built on capability"}
                    </div>
                  </ListItem>

                  <ListItem
                    bottomBorder={"dark"}
                    className={classNames(
                      "__wab_instance",
                      sty.listItem__yUpWy
                    )}
                    icon={
                      <CheckCircleIcon
                        className={classNames(projectcss.all, sty.svg___29XoF)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xRujo
                      )}
                    >
                      {"Highly energetic"}
                    </div>
                  </ListItem>

                  <ListItem
                    bottomBorder={"dark"}
                    className={classNames(
                      "__wab_instance",
                      sty.listItem__hmYh8
                    )}
                    icon={
                      <CheckCircleIcon
                        className={classNames(projectcss.all, sty.svg__m2Qus)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__oq1Ab
                      )}
                    >
                      {"100% transparency and accountability"}
                    </div>
                  </ListItem>

                  <ListItem
                    bottomBorder={"dark"}
                    className={classNames("__wab_instance", sty.listItem__rHDg)}
                    icon={
                      <CheckCircleIcon
                        className={classNames(projectcss.all, sty.svg___91YyG)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__sxlms
                      )}
                    >
                      {"Refreshing clarity"}
                    </div>
                  </ListItem>

                  <ListItem
                    className={classNames(
                      "__wab_instance",
                      sty.listItem__ouLtw
                    )}
                    icon={
                      <CheckCircleIcon
                        className={classNames(projectcss.all, sty.svg__fSqsf)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___8AeTq
                      )}
                    >
                      {"Modern results"}
                    </div>
                  </ListItem>
                </div>
              </div>
            </p.Stack>
          </Section>

          <Section
            data-plasmic-name={"pricingSection"}
            data-plasmic-override={overrides.pricingSection}
            background={"dark"}
            className={classNames("__wab_instance", sty.pricingSection)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__wqJho)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__rk08H)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__kMiq0)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__e4YOg
                    )}
                  >
                    {"Pricing plans"}
                  </div>
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__zVCu
                  )}
                >
                  {
                    "Nascetur nascetur ridiculus scelerisque adipiscing a nascetur varius sed eu a ad semper a est nec litora ante at orci rhoncus a varius auctor aliquam inceptos vestibulum ridiculus."
                  }
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__aVfZ)}
              >
                <div className={classNames(projectcss.all, sty.column__u5D4)}>
                  <PriceCard
                    borders={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? []
                        : ["flatRight"]
                    }
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard__sLwV7
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__l2OuA
                          )}
                          description={
                            "Vestibulum mollis odio dictum ultrices facilisis molestie vestibulum"
                          }
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__lBdGp
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__o6FzL
                          )}
                          description={"Mus consequat a justo"}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__hDrFe
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />
                      </React.Fragment>
                    }
                  />
                </div>

                <div className={classNames(projectcss.all, sty.column__ekYMk)}>
                  <PriceCard
                    action={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__hJmeo
                        )}
                      >
                        {"Buy pro"}
                      </div>
                    }
                    borders={[]}
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard__rXvg8
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp___92Z6M
                          )}
                          description={
                            "Ligula primis mollis sem dignissim semper lectus parturient"
                          }
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__yikOy
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__obRir
                          )}
                          description={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__duBz
                              )}
                            >
                              {"A curabitur dignissim pharetra porta suscipit"}
                            </div>
                          }
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg___42BMe
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__pcVpq
                          )}
                          description={
                            "Condimentum diam a et sapien praesent potenti torquent a eros"
                          }
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__bF4Ko
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__ag9Pp
                          )}
                          description={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__armuU
                              )}
                            >
                              {"Conubia in hac eu elementum sodales"}
                            </div>
                          }
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__qP9Mi
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />
                      </React.Fragment>
                    }
                    dollars={"16"}
                    label={"PRO"}
                    primary={true}
                  />
                </div>

                <div className={classNames(projectcss.all, sty.column__oc0Cs)}>
                  <PriceCard
                    action={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__khnRp
                        )}
                      >
                        {"Buy team"}
                      </div>
                    }
                    borders={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? []
                        : ["flatLeft"]
                    }
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard__mFsiB
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__zTkgm
                          )}
                          description={"Ad nam curae a potenti platea"}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg___9A71P
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp___3ABa4
                          )}
                          description={
                            "A adipiscing scelerisque pretium consectetur sem"
                          }
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__yuUa
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />
                      </React.Fragment>
                    }
                    dollars={"10"}
                    label={"Team"}
                  />
                </div>
              </p.Stack>
            </p.Stack>
          </Section>

          <Section
            data-plasmic-name={"shopBannersSection"}
            data-plasmic-override={overrides.shopBannersSection}
            className={classNames("__wab_instance", sty.shopBannersSection)}
            size={"fullContentWidth"}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__b1EJf)}
            >
              <Banner
                className={classNames("__wab_instance", sty.banner__ttuLt)}
                image={{
                  src: sunglassesMaleMcqH0JtTiGtxg,
                  fullWidth: 2851,
                  fullHeight: 1900,
                  aspectRatio: undefined
                }}
                left={
                  <React.Fragment>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__n4EfL
                      )}
                    >
                      {"Sunglasses Collection"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nIlRf
                      )}
                    >
                      {"Get 25% off on selected items"}
                    </div>

                    <Button
                      color={"link"}
                      endIcon={
                        <ChevronRightIcon
                          className={classNames(projectcss.all, sty.svg__lHbnn)}
                          role={"img"}
                        />
                      }
                      flat={true}
                      showEndIcon={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__q1ZRp
                        )}
                      >
                        {"Go to collection"}
                      </div>
                    </Button>
                  </React.Fragment>
                }
              />

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__qiJtV)}
              >
                <Banner
                  className={classNames("__wab_instance", sty.banner__s0BLc)}
                  image={{
                    src: sneakersNihmNntJz0Exu,
                    fullWidth: 2850,
                    fullHeight: 1900,
                    aspectRatio: undefined
                  }}
                  left={
                    <React.Fragment>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__hEeb
                        )}
                      >
                        {"Sneakers\nCollection"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__uX3Jm
                        )}
                      >
                        {"Get 25% off on selected items"}
                      </div>

                      <Button
                        color={"link"}
                        endIcon={
                          <ChevronRightIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__mrEe9
                            )}
                            role={"img"}
                          />
                        }
                        flat={true}
                        showEndIcon={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__gShsc
                          )}
                        >
                          {"Go to collection"}
                        </div>
                      </Button>
                    </React.Fragment>
                  }
                />

                <Banner
                  className={classNames("__wab_instance", sty.banner__hzbml)}
                  image={{
                    src: shirtWoman0ZC70Wxg6LS7,
                    fullWidth: 1834,
                    fullHeight: 2751,
                    aspectRatio: undefined
                  }}
                  left={
                    <React.Fragment>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__sKaXf
                        )}
                      >
                        {"Shirts\nCollection"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__kNXsQ
                        )}
                      >
                        {"Get 25% off on selected items"}
                      </div>

                      <Button
                        color={"link"}
                        endIcon={
                          <ChevronRightIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__zJ4J
                            )}
                            role={"img"}
                          />
                        }
                        flat={true}
                        showEndIcon={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__tWlXw
                          )}
                        >
                          {"Go to collection"}
                        </div>
                      </Button>
                    </React.Fragment>
                  }
                />
              </p.Stack>
            </p.Stack>
          </Section>

          <Section
            data-plasmic-name={"logoCloudSection"}
            data-plasmic-override={overrides.logoCloudSection}
            className={classNames("__wab_instance", sty.logoCloudSection)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__fwTHn)}
            >
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__yQghZ)}
                displayHeight={"48px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                src={{
                  src: loom97S7RFodIStwa,
                  fullWidth: 300,
                  fullHeight: 91,
                  aspectRatio: 3.303226
                }}
              />

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__qlKSx)}
                displayHeight={"48px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                src={{
                  src: strapi7Y9RC7C045TS1,
                  fullWidth: 300,
                  fullHeight: 78,
                  aspectRatio: 3.849624
                }}
              />

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__uDfVs)}
                displayHeight={"48px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                src={{
                  src: segmentR8FFuhtXrhyzg,
                  fullWidth: 300,
                  fullHeight: 62,
                  aspectRatio: 4.87619
                }}
              />

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__oPKzi)}
                displayHeight={"48px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                src={{
                  src: xstate32C5Ajn3BJ8No,
                  fullWidth: 300,
                  fullHeight: 94,
                  aspectRatio: 3.2
                }}
              />

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img___8Gq05)}
                displayHeight={"48px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                src={{
                  src: mapboxQcVyAlOn6Xo1H,
                  fullWidth: 300,
                  fullHeight: 67,
                  aspectRatio: 4.491228
                }}
              />
            </p.Stack>
          </Section>

          <Section
            data-plasmic-name={"testimonialsSection"}
            data-plasmic-override={overrides.testimonialsSection}
            background={"gray"}
            className={classNames("__wab_instance", sty.testimonialsSection)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__bMsjb)}
            >
              <div className={classNames(projectcss.all, sty.column__wW4P6)}>
                <Testimonial
                  className={classNames(
                    "__wab_instance",
                    sty.testimonial__sYHhO
                  )}
                  image={{
                    src: tracyHbRHTdjarv0,
                    fullWidth: 500,
                    fullHeight: 500,
                    aspectRatio: undefined
                  }}
                />
              </div>

              <div className={classNames(projectcss.all, sty.column__yxdux)}>
                <Testimonial
                  className={classNames(
                    "__wab_instance",
                    sty.testimonial__bc7Ay
                  )}
                  image={{
                    src: elaineDKgidXsX5NNz,
                    fullWidth: 460,
                    fullHeight: 280,
                    aspectRatio: undefined
                  }}
                  name={"Elaine Benes"}
                  quote={
                    <React.Fragment>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__hGwGc
                        )}
                      >
                        {'"Vestibulum lacinia varius habitant dis aenean.'}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__qKvpb
                        )}
                      >
                        {
                          'A parturient non ultricies a parturient leo a nascetur at consectetur turpis praesent mus ornare nulla posuere vel parturient."'
                        }
                      </div>
                    </React.Fragment>
                  }
                  title={"Editor, Pendant Publishing"}
                />
              </div>

              <div className={classNames(projectcss.all, sty.column__q1Vcy)}>
                <Testimonial
                  className={classNames(
                    "__wab_instance",
                    sty.testimonial__f9RO
                  )}
                  image={{
                    src: louisOStIjNQ0Xnvo,
                    fullWidth: 2249,
                    fullHeight: 3000,
                    aspectRatio: undefined
                  }}
                  name={"Louis Huang"}
                  quote={
                    '"Purus dis a primis rhoncus blandit velit suspendisse porta at ullamcorper suscipit a scelerisque sed pharetra facilisi vitae."'
                  }
                  title={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tvgzd
                      )}
                    >
                      {"Restaurant Owner, Cattleman's Ranch"}
                    </div>
                  }
                />
              </div>
            </p.Stack>
          </Section>

          <CallToActionSection
            data-plasmic-name={"callToActionSection"}
            data-plasmic-override={overrides.callToActionSection}
            className={classNames("__wab_instance", sty.callToActionSection)}
            image={{
              src: meetingJBnIzTsNkKhfY,
              fullWidth: 2916,
              fullHeight: 1787,
              aspectRatio: undefined
            }}
          />

          <FooterSection
            data-plasmic-name={"footerSection"}
            data-plasmic-override={overrides.footerSection}
            className={classNames("__wab_instance", sty.footerSection)}
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "headerHeroSection",
    "navbar",
    "signUpPrompt",
    "valuePropsSection",
    "checkpointsSection",
    "pricingSection",
    "shopBannersSection",
    "logoCloudSection",
    "testimonialsSection",
    "callToActionSection",
    "footerSection"
  ],

  headerHeroSection: ["headerHeroSection", "navbar", "signUpPrompt"],
  navbar: ["navbar"],
  signUpPrompt: ["signUpPrompt"],
  valuePropsSection: ["valuePropsSection"],
  checkpointsSection: ["checkpointsSection"],
  pricingSection: ["pricingSection"],
  shopBannersSection: ["shopBannersSection"],
  logoCloudSection: ["logoCloudSection"],
  testimonialsSection: ["testimonialsSection"],
  callToActionSection: ["callToActionSection"],
  footerSection: ["footerSection"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    headerHeroSection: makeNodeComponent("headerHeroSection"),
    navbar: makeNodeComponent("navbar"),
    signUpPrompt: makeNodeComponent("signUpPrompt"),
    valuePropsSection: makeNodeComponent("valuePropsSection"),
    checkpointsSection: makeNodeComponent("checkpointsSection"),
    pricingSection: makeNodeComponent("pricingSection"),
    shopBannersSection: makeNodeComponent("shopBannersSection"),
    logoCloudSection: makeNodeComponent("logoCloudSection"),
    testimonialsSection: makeNodeComponent("testimonialsSection"),
    callToActionSection: makeNodeComponent("callToActionSection"),
    footerSection: makeNodeComponent("footerSection"),
    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "Home",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
